version: "3.9"

services:
  gateway:
    image: csharpaspnetcore6/cultural-share-gateway
    ports:
      - "5000:8080"
    environment:
      - AUTH_SERVICE_URL=http://host.docker.internal:8880
      - POST_WRITE_SERVICE_URL=http://host.docker.internal:7880
      - POST_READ_SERVICE_URL=http://host.docker.internal:6880

  auth:
    image: csharpaspnetcore6/cultural-share-auth
    environment:
      - HOST=postgres
      - PORT=5432
      - DB_NAME=AuthDB
      - USER_NAME=docker
      - PASSWORD=docker
    ports:
      - "8880:8080"
      - "8080:80"

  post-write:
    image: csharpaspnetcore6/cultural-share-post-write
    environment:
      - HOST=postgres
      - PORT=5432
      - DB_NAME=PostWriteDB
      - USER_NAME=docker
      - PASSWORD=docker
    ports:
      - "7880:7880"
      - "7080:7080"

  post-read:
    image: csharpaspnetcore6/cultural-share-post-read
    environment:
      - MONGO_HOST=mongodb
      - MONGO_PORT=27017
      - MONGO_DB_NAME=PostReadDB
    ports:
      - "6880:6880"
      - "6080:6080"

  # mongo-side-car:
  #   image: csharpaspnetcore6/cultural-share-mongo-side-car
  #   environment:
  #     - DOTNET_RUNNING_IN_CONTAINER=true
  #     - MONGO_HOST=mongodb
  #     - MONGO_PORT=27017
  #     - MONGO_DB_NAME=PostReadDB
  #     - HOST=postgres
  #     - PORT=5432
  #     - DB_NAME=PostWriteDB
  #     - USER_NAME=docker
  #     - PASSWORD=docker
  #     - DEBEZIUM_URL=http://host.docker.internal:8083
  #     - KAFKA_GROUP_ID=yakiv_group
  #     - KAFKA_URL=http://host.docker.internal:29092
  #   depends_on:
  #     - post-read
  #     - post-write
  #     - debezium
  #     - mongodb
  #     - postgres
  #################### Services ####################

  mongodb:
    image: mongo
    container_name: my_mongodb
    ports:
      - "27017:27017"

  postgres:
    image: debezium/postgres:16
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=docker
      - POSTGRES_PASSWORD=docker

  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-enterprise-kafka:5.5.3
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT

  debezium:
    image: debezium/connect:1.4
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: connect_configs
      OFFSET_STORAGE_TOPIC: connect_offsets
      KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
    depends_on: [kafka]
    ports:
      - 8083:8083

  schema-registry:
    image: confluentinc/cp-schema-registry:5.5.3
    environment:
      - SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL=zookeeper:2181
      - SCHEMA_REGISTRY_HOST_NAME=schema-registry
      - SCHEMA_REGISTRY_LISTENERS=http://schema-registry:8081,http://localhost:8081
    ports:
      - 8081:8081
    depends_on: [zookeeper, kafka]

  kafka_manager:
    image: hlebalbau/kafka-manager:stable
    restart: always
    ports:
      - "9000:9000"
    depends_on:
      - zookeeper
      - kafka
    environment:
      ZK_HOSTS: "zookeeper:2181"
      APPLICATION_SECRET: "random-secret"
    command: -Dpidfile.path=/dev/null

  #################################### Graylog ######################################

  # MongoDB: https://hub.docker.com/_/mongo/
  mongodb-graylog:
    image: mongo:6.0
  # Elasticsearch: https://www.elastic.co/guide/en/elasticsearch/reference/7.10/docker.html
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.10.2
    environment:
      - http.host=0.0.0.0
      - transport.host=localhost
      - network.host=0.0.0.0
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 1g

  # Graylog: https://hub.docker.com/r/graylog/graylog/
  graylog:
    image: graylog/graylog:5.1
    # journal and config directories in local NFS share for persistence
    environment:
      # CHANGE ME (must be at least 16 characters)!
      - GRAYLOG_PASSWORD_SECRET=somepasswordpepper
      # Password: admin
      - GRAYLOG_ROOT_PASSWORD_SHA2=8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918
      - GRAYLOG_HTTP_EXTERNAL_URI=http://192.168.205.4:9000/
    entrypoint: /usr/bin/tini -- wait-for-it elasticsearch:9200 -- /docker-entrypoint.sh
    links:
      - mongodb-graylog:mongo
      - elasticsearch
    restart: always
    depends_on:
      - mongodb-graylog
      - elasticsearch
    ports:
      # Graylog web interface and REST API
      - 9001:9000
      # Syslog TCP
      - 1514:1514
      # Syslog UDP
      - 1514:1514/udp
      # GELF TCP
      - 12201:12201
      # GELF UDP
      - 12201:12201/udp
